def func1(arg1, arg2):
    var23 = func7()
    var24 = -111 & var23 + arg2 + 1483262899 - (var23 - 95 ^ arg2)
    result = (arg1 & 1526953465 - (((arg2 - (1899675674 - var23 & -1324308794 + var24)) ^ arg2 & 1538677516) | arg1 & arg2)) + -139
    return result
def func7():
    func2()
    result = len((-3 ^ i for i in [-8 & 6 for i in func4(-4, -3)]))
    func3()
    return result
def func5(arg5, arg6):
    var11 = func6(arg5, arg6)
    result = ((257 | (1374273379 ^ var11 ^ var11 & (var11 | var11) - arg5 ^ var11)) | (var11 | arg6)) & 1737862608 + var11
    return result
def func6(arg7, arg8):
    var9 = 0
    for var10 in xrange(4):
        var9 += arg8 & var10
    return var9
def func4(arg3, arg4):
    var12 = func5(-2135655581, arg3)
    yield var12
    var13 = arg4 | arg3
    yield var13
    var14 = 161 - (662 ^ var13 + 776)
    yield var14
    var15 = var13 - (var13 + var14)
    yield var15
    var16 = -620 + (arg3 | (var14 - var14))
    yield var16
    var17 = ((-2026547572 + -507) | var16) - var14
    yield var17
    var18 = -974 ^ var16 ^ var16
    yield var18
    var19 = var18 ^ (var16 - var16) - var15
    yield var19
    var20 = var14 ^ var19
    yield var20
    var21 = (var14 & 178 ^ var19) & var19
    yield var21
    var22 = -439 - (var19 + 944 + arg4)
    yield var22
def func3():
    global len
    del len
def func2():
    global len
    len = lambda x : -10
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 8'
    print 'arg_number: 25'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    var23 = func7()
    var24 = -111 & var23 + arg2 + 1483262899 - (var23 - 95 ^ arg2)
    result = (arg1 & 1526953465 - (((arg2 - (1899675674 - var23 & -1324308794 + var24)) ^ arg2 & 1538677516) | arg1 & arg2)) + -139
    return result
def func7():
    func2()
    result = len((-3 ^ i for i in [-8 & 6 for i in func4(-4, -3)]))
    func3()
    return result
def func5(arg5, arg6):
    var11 = func6(arg5, arg6)
    result = ((257 | (1374273379 ^ var11 ^ var11 & (var11 | var11) - arg5 ^ var11)) | (var11 | arg6)) & 1737862608 + var11
    return result
def func6(arg7, arg8):
    var9 = 0
    for var10 in xrange(4):
        var9 += arg8 & var10
    return var9
def func4(arg3, arg4):
    var12 = func5(-2135655581, arg3)
    yield var12
    var13 = arg4 | arg3
    yield var13
    var14 = 161 - (662 ^ var13 + 776)
    yield var14
    var15 = var13 - (var13 + var14)
    yield var15
    var16 = -620 + (arg3 | (var14 - var14))
    yield var16
    var17 = ((-2026547572 + -507) | var16) - var14
    yield var17
    var18 = -974 ^ var16 ^ var16
    yield var18
    var19 = var18 ^ (var16 - var16) - var15
    yield var19
    var20 = var14 ^ var19
    yield var20
    var21 = (var14 & 178 ^ var19) & var19
    yield var21
    var22 = -439 - (var19 + 944 + arg4)
    yield var22
def func3():
    global len
    del len
def func2():
    global len
    len = lambda x : -10
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 8'
    print 'arg_number: 25'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    var23 = func7()
    var24 = -111 & var23 + arg2 + 1483262899 - (var23 - 95 ^ arg2)
    result = (arg1 & 1526953465 - (((arg2 - (1899675674 - var23 & -1324308794 + var24)) ^ arg2 & 1538677516) | arg1 & arg2)) + -139
    return result
def func7():
    func2()
    result = len((-3 ^ i for i in [-8 & 6 for i in func4(-4, -3)]))
    func3()
    return result
def func5(arg5, arg6):
    var11 = func6(arg5, arg6)
    result = ((257 | (1374273379 ^ var11 ^ var11 & (var11 | var11) - arg5 ^ var11)) | (var11 | arg6)) & 1737862608 + var11
    return result
def func6(arg7, arg8):
    var9 = 0
    for var10 in xrange(4):
        var9 += arg8 & var10
    return var9
def func4(arg3, arg4):
    var12 = func5(-2135655581, arg3)
    yield var12
    var13 = arg4 | arg3
    yield var13
    var14 = 161 - (662 ^ var13 + 776)
    yield var14
    var15 = var13 - (var13 + var14)
    yield var15
    var16 = -620 + (arg3 | (var14 - var14))
    yield var16
    var17 = ((-2026547572 + -507) | var16) - var14
    yield var17
    var18 = -974 ^ var16 ^ var16
    yield var18
    var19 = var18 ^ (var16 - var16) - var15
    yield var19
    var20 = var14 ^ var19
    yield var20
    var21 = (var14 & 178 ^ var19) & var19
    yield var21
    var22 = -439 - (var19 + 944 + arg4)
    yield var22
def func3():
    global len
    del len
def func2():
    global len
    len = lambda x : -10
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 8'
    print 'arg_number: 25'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    var23 = func7()
    var24 = -111 & var23 + arg2 + 1483262899 - (var23 - 95 ^ arg2)
    result = (arg1 & 1526953465 - (((arg2 - (1899675674 - var23 & -1324308794 + var24)) ^ arg2 & 1538677516) | arg1 & arg2)) + -139
    return result
def func7():
    func2()
    result = len((-3 ^ i for i in [-8 & 6 for i in func4(-4, -3)]))
    func3()
    return result
def func5(arg5, arg6):
    var11 = func6(arg5, arg6)
    result = ((257 | (1374273379 ^ var11 ^ var11 & (var11 | var11) - arg5 ^ var11)) | (var11 | arg6)) & 1737862608 + var11
    return result
def func6(arg7, arg8):
    var9 = 0
    for var10 in xrange(4):
        var9 += arg8 & var10
    return var9
def func4(arg3, arg4):
    var12 = func5(-2135655581, arg3)
    yield var12
    var13 = arg4 | arg3
    yield var13
    var14 = 161 - (662 ^ var13 + 776)
    yield var14
    var15 = var13 - (var13 + var14)
    yield var15
    var16 = -620 + (arg3 | (var14 - var14))
    yield var16
    var17 = ((-2026547572 + -507) | var16) - var14
    yield var17
    var18 = -974 ^ var16 ^ var16
    yield var18
    var19 = var18 ^ (var16 - var16) - var15
    yield var19
    var20 = var14 ^ var19
    yield var20
    var21 = (var14 & 178 ^ var19) & var19
    yield var21
    var22 = -439 - (var19 + 944 + arg4)
    yield var22
def func3():
    global len
    del len
def func2():
    global len
    len = lambda x : -10
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 8'
    print 'arg_number: 25'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
